<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personal.cv.dao.CommentInfoDao">

    <resultMap id="UsersMap" type="com.personal.cv.entity.Users">
        <id column="user_id" property="user_id"></id>
        <result column="nickname" property="nickname"></result>
    </resultMap>
    <resultMap id="ArticleMap" type="com.personal.cv.entity.ArticleInfo">
        <id column="article_id" property="article_id"></id>
        <result column="title" property="title"></result>
    </resultMap>

    <resultMap id="CommentMap" type="com.personal.cv.entity.CommentInfo">
        <id column="comment_id" property="comment_id"></id>
        <result column="user_id" property="user_id"></result>
        <result column="article_id" property="article_id"></result>
        <result column="comment_content" property="comment_content"></result>
        <result column="reply_num" property="reply_num"></result>
        <result column="comment_time" property="comment_time"></result>
        <result column="commentNum" property="commentNum"></result>
        <result column="comment_ip" property="comment_ip"></result>
        <result column="comment_adds" property="comment_adds"></result>
        <result column="comment_os" property="comment_os"></result>
        <result column="comment_browser" property="comment_browser"></result>
        <result column="delete_state" property="delete_state"></result>
        <association property="users" resultMap="UsersMap"></association>
        <association property="articleInfo" resultMap="ArticleMap"></association>

    </resultMap>

    <select id="select" resultType="CommentInfo">
      select top ${maxSize} * from
        (select ROW_NUMBER() over(order by comment_id desc)as rownumber, * from
          (select a.comment_id,a.user_id,a.article_id,a.comment_content,a.comment_time,a.comment_ip,a.comment_adds,a.comment_os,a.comment_browser,a.delete_state,b.reply_num
              from commentInfo a left join
              (select c.comment_id,COUNT(r.comment_id) as reply_num from commentInfo c
                left join (select * from replyInfo where delete_state=0) as r on c.comment_id=r.comment_id group by c.comment_id) as b
        on a.comment_id=b.comment_id where a.delete_state=0) as e) as f
      where rownumber>#{firstResult} and (f.comment_content like #{pattern} or f.article_id like #{pattern} or f.comment_id like #{pattern} or f.comment_adds like #{pattern})

    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select COUNT(*) from commentInfo c where  (c.comment_content like #{pattern} or c.article_id like #{pattern} or c.comment_id like #{pattern} or c.comment_adds like #{pattern}) and c.delete_state=0
    </select>

    <select id="get" resultMap="CommentMap">
        select c.*,u.nickname,a.title from commentInfo c left join users u on c.user_id=u.user_id left join articleInfo a on c.article_id=a.article_id where c.comment_id=#{id} and c.delete_state=0
    </select>

    <!--删除-->
    <update id="delete">
        update commentInfo set delete_state=1
        <where>
            comment_id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </update>

    <select id="seeReply"  resultType="Map" statementType="STATEMENT">
        select r.*,u1.nickname as user_name,u2.nickname as to_name from replyInfo r
          inner join users u1 on r.user_id=u1.user_id
          inner join users u2 on r.to_uid=u2.user_id where r.comment_id=${id} and r.delete_state=0 order by r.reply_time desc
    </select>
</mapper>