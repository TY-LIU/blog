<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personal.cv.dao.ArticleInfoDao">

    <resultMap id="ColumnMap" type="com.personal.cv.entity.ColumnInfo">
        <id column="column_id" property="column_id"></id>
        <result column="column_name" property="column_name"></result>
    </resultMap>

    <resultMap id="ArticleMap" type="com.personal.cv.entity.ArticleInfo">
        <id column="article_id" property="article_id"></id>
        <result column="title" property="title"></result>
        <result column="content" property="content"></result>
        <result column="describe" property="describe"></result>
        <result column="title_img" property="title_img"></result>
        <result column="label" property="label"></result>
        <result column="commentNum" property="commentNum"></result>
        <result column="put_time" property="put_time"></result>
        <result column="update_time" property="update_time"></result>
        <result column="put_state" property="put_state"></result>
        <result column="delete_state" property="delete_state"></result>
        <association property="columnInfo" resultMap="ColumnMap"></association>
    </resultMap>

    <select id="select" resultMap="ArticleMap">
        select top ${maxSize} i.article_id,i.title,i.column_name,i.label,i.commentNum,i.update_time from
          (select row_number() over(order by article_id DESC) as rownumber,*
              from(select d.article_id,d.title,d.content,d.describe,d.title_img,g.column_name,d.label,f.commentNum,d.put_time,d.update_time,d.put_state,d.delete_state
                  from articleInfo d
                    left join
                      (select a.article_id,(count(b.comment_id)+COUNT(c.reply_id)) as commentNum
                        from articleInfo a
                        left join commentInfo b on a.article_id=b.article_id
                        left join replyInfo c on b.comment_id=c.comment_id
                      group by a.article_id) f
                    on d.article_id=f.article_id
                  left join columnInfo g on d.column_id=g.column_id where d.delete_state=0) as h) as i
          where rownumber>#{firstResult} and (i.title like #{pattern} or i.content like #{pattern} or i.describe like #{pattern} or i.label like #{pattern});

    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        select count(*) from articleInfo a where (a.title like #{pattern} or a.content like #{pattern} or a.describe like #{pattern} or a.label like #{pattern}) and a.delete_state=0
    </select>

    <select id="get" resultMap="ArticleMap">
        select * from articleInfo a left join columnInfo c on a.column_id=c.column_id  where a.article_id=#{pattern}
    </select>

    <update id="update">
        update articleInfo set title=#{title},content=#{content},describe=#{describe},title_img=#{title_img},column_id=#{column_id},label=#{label},update_time=#{update_time} where article_id=#{article_id}
    </update>

    <insert id="save">
        insert into articleInfo(title,content,describe,title_img,column_id,label,put_time,update_time,put_state)
                        values(#{title},#{content},#{describe},#{title_img},#{column_id},#{label},#{put_time},#{update_time},#{put_state})
    </insert>

    <!--删除-->
    <update id="delete">
        update articleInfo set delete_state=1
        <where>
            article_id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </update>
</mapper>